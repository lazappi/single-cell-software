#!/usr/bin/env Rscript

################################################################################
#                                                                              #
#                                scRNA-tools app                               #
#    command line application for interacting with the scRNA-tools database    #
#                                                                              #
################################################################################

#### RENV ####

options("renv.verbose" = FALSE)
renv::restore()

#### DOCOPT ####

"
scRNA-tools command line application

Usage:
    scrnatools add
    scrnatools update [<name>]
    scrnatools search [<name>]
    scrnatools check [--all] [--links]
    scrnatools build
    scrnatools archive [<name>]
    scrnatools restore [<arc>]
    scrnatools stats [--plot]
    scrnatools categories
    scrnatools add_category
    scrnatools -h | --help
    scrnatools --version

Options:
  name          Name of a tool in the database
  arc           Name of an archive in the database
  -a, --all     Whether to check all repositories (not just new ones)
  -l, --links   Whether to check for preprint-publication links
  -p, --plot    Whether to show plots
  -h --help     Show this help message.
  --version     Show version.
" -> DOCOPT

#### PACKAGES ####

suppressPackageStartupMessages({
    library(docopt)
})

#### SOURCE ####

source("app/logo.R")
source("app/ui.R")
source("app/sctool-class.R")
source("app/regex.R")
source("app/load.R")
source("app/add.R")
source("app/update.R")
source("app/check.R")
source("app/search.R")
source("app/build.R")
source("app/analysis.R")
source("app/pkgs-cache.R")
source("app/references.R")
source("app/archive.R")
source("app/categories.R")
source("app/save.R")
source("app/git.R")
source("app/github.R")
source("app/stats.R")
source("app/utils.R")

#### MAIN CODE ####

opts <- docopt(DOCOPT, version = "0.5.2")

logo <- get_logo()
cat(logo, "\n")

modifying <- any(c(
    opts$add,
    opts$update,
    opts$check,
    opts$build,
    opts$archive,
    opts$restore,
    opts$add_category
))

if (modifying) {
    check_status()
}

dir <- "database"
data_dir <- "docs/data"
plot_dir <- "docs/plots"

database <- load_database(dir)

if (any(c(opts$add, opts$update, opts$check))) {
    pkgs_cache <- load_pkgs_cache(dir)
}

if (opts$add) {
    database <- add_tool(database, pkgs_cache)
}

if (opts$update) {
    database <- update_tool(database, pkgs_cache, opts$name)
}

if (opts$check) {
    database <- check(database, pkgs_cache, dir, opts$all, opts$links)
}

if (opts$search) {
    search(database, opts$name)
}

if (opts$build) {
    database <- build(database, data_dir, plot_dir)
}

if (opts$archive) {
    database <- archive_tool(database, dir, opts$name)
}

if (opts$restore) {
    database <- restore_archive(database, dir, opts$arc)
}

if (opts$stats) {
    show_stats(database, opts$plot)
}

if (opts$categories) {
    show_categories(database)
}

if (opts$add_category) {
    database <- add_category(database)
}

if (modifying) {
    save_database(database, dir)
    if (!opts$build) {
        commit_database(dir)
    }
}
